@model Bookstore.DTOs.BookDto

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ISBN)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ISBN)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            <div style=" word-wrap: break-word;">
                @Html.DisplayFor(model => model.Description)
            </div>
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PublishingDate)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PublishingDate)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.PublishingHouse)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.PublishingHouse)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.AuthorsNames)
        </dt>
        @* <a asp-controller="Authors" asp-action="AuthorDetailsWithBooks" asp-route-id="@Author.Id"> *@
        @* <dd class="col-sm-10"> *@
        @*     @Html.DisplayFor(model => model.AuthorsNames) *@
        @* </dd> *@
        <dd class="col-sm-10">
            @for (int i = 0; i < Model.Authors.Count; i++)
            {
                <a asp-controller="Authors" asp-action="AuthorDetailsWithBooks" asp-route-authorid="@Model.Authors.ElementAt(i)">
                    @Model.AuthorsNames.ElementAt(i)
                </a>
                @if (i < Model.Authors.Count - 1)
                {
                    <span>, </span>
                }
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GenreTypes)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.GenreTypes)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.BookImage)
            <img src="data:image/jpeg;base64,@Convert.ToBase64String(Model.BookImage)" alt="@Model.Title" style=" height: 200 px; width: 200px" />

        </dt>



    </dl>
</div>

<!-- Display reviews using ViewComponent -->
@await Component.InvokeAsync("BookReview", new { bookId = Model.Id })
@if (User.IsInRole("user"))
{
    <div>
        <a asp-controller="Reviews" asp-action="Create" asp-route-bookId="@Model.Id" class="btn btn-primary">Add Review</a>
    </div>


    <div>
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
        <a asp-action="Index">Back to List</a>
    </div>
}
