@using Bookstore.DTOs
@model AuthorDto

@{
    ViewData["Title"] = "AllAuthorDetails";
}

@if (TempData["SuccessMessage"] != null)
{
    <div id="successMessage" class="alert alert-success" role="alert">
        @TempData["SuccessMessage"] <i class="fa-solid fa-check"></i>
    </div>

    <script>
        // După 5 secunde (5000 ms), ascunde mesajul
        setTimeout(function() {
            var successMessage = document.getElementById('successMessage');
            if (successMessage) {
                successMessage.style.display = 'none';
            }
        }, 5000); // 5000ms = 5 secunde
    </script>
}

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@Model.Name</title>
    <link rel="stylesheet" href="style.css">
    <style>
        .title-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            width: 90%;
            max-width: 1000px;
            margin: 20px auto;
        }

        .title {
            font-size: 40px;
            color: white;
            text-decoration: none;
        }

        .add-author-button {
            padding: 8px 12px;
            background-color: #6a0dad;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            text-decoration: none;
        }

            .add-author-button:hover {
                background-color: #581b98;
            }

        .author-details {
            background: #1e1e2f;
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 25px;
            width: 100%;
            text-align: center;
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3);
            align-self: center;
            margin-bottom: 60px; /* spațiu mai mare între autor și cărți */
        }

        .author-header {
            display: flex;
            flex-direction: column;
            align-items: center;
            margin-bottom: 20px;
        }

            .author-header img {
                width: 250px;
                height: 250px;
                border-radius: 50%;
                object-fit: cover;
                border: 3px solid white;
                transition: transform 0.3s ease-in-out;
            }

                .author-header img:hover {
                    transform: scale(1.1);
                }

        .author-bio {
            font-size: 18px; /* mărit de la 16px */
            margin-top: 10px;
            padding: 0 20px;
            max-width: 700px;
            margin-left: auto;
            margin-right: auto;
            white-space: pre-wrap;
            word-wrap: break-word;
            line-height: 1.8;
            text-align: justify;
        }

        table {
            width: 90%;
            margin: 0 auto 40px;
            border-collapse: collapse;
            border-radius: 15px;
            overflow: hidden;
            box-shadow: 0 4px 10px rgba(0,0,0,0.3);
            background-color: #1e1e1e;
            margin-top: 20px;
            margin-left: 0px;
            align-self: center;
            padding: 25px;
        }

        thead {
            background-color: #2a2a2a;
        }

        th, td {
            padding: 12px 15px;
            text-align: center;
        }

        th {
            color: #6a0dad;
            font-size: 16px;
            border-bottom: 2px solid #6a0dad;
        }

        td {
            font-size: 14px;
            border-bottom: 1px solid #333;
        }

        tr:hover {
            background-color: #2e2e2e;
        }

        img {
            width: 60px;
            height: auto;
            border-radius: 5px;
        }

        .action-links a {
            margin: 0 5px;
            text-decoration: none;
            padding: 6px 10px;
            border-radius: 5px;
            background-color: #333;
            color: white;
            transition: background-color 0.2s;
        }

            .action-links a:hover {
                background-color: #555;
            }

        .card-title {
            font-size: 1.1rem;
            font-weight: 600;
            margin: 0;
        }

        .card-img-top {
            border-bottom: 1px solid #ddd;
        }

        .add-button-container {
            text-align: center;
            margin: 20px 0;
        }

        .add-button {
            background-color: #6a0dad;
            color: white;
            padding: 10px 20px;
            border: none;
            font-size: 16px;
            border-radius: 8px;
            text-decoration: none;
            transition: background-color 0.3s ease;
        }

        .wishlist-btn {
            border: none;
            background: none;
            cursor: pointer;
            padding: 0;
            font-size: 1.5rem;
            color: black;
            transition: color 0.3s ease;
        }

            .wishlist-btn:hover {
                color: #dc3545;
            }

        /* Efect hover pe imaginea cărții */
        .card img {
            transition: transform 0.3s ease-in-out;
        }

            .card img:hover {
                transform: scale(1.05);
            }
    </style>
</head>

@if (TempData["SuccessMessageW"] != null)
{
    <div class="alert alert-success" role="alert" id="successMessageW">
        @TempData["SuccessMessageW"]
    </div>
    <script>
        setTimeout(function() {
            document.getElementById("successMessageW").style.display = 'none';
        }, 4000);
    </script>
}

<div class="title-container">
    <h1 class="title">@Model.Name</h1>
</div>

<div class="author-details">
    <div class="author-header">
        <img src="@(Model.AuthorImage != null
                ? $"data:image/jpeg;base64,{Convert.ToBase64String(Model.AuthorImage)}"
                : Url.Content("~/images/default.jpg"))"
             alt="@Model.Name" />
    </div>
    <div class="author-header">
        <h1>@Model.Name</h1>
    </div>
    <div class="author-bio">
        <p>@Model.Description</p>
    </div>
</div>

@if (Model.Books != null && Model.Books.Any())
{
    <div class="row">
        @foreach (var book in Model.Books)
        {
            <div class="col-md-3 mb-4">
                <div class="card h-100 shadow-sm border-0">
                    <a asp-controller="Books" asp-action="Details" asp-route-id="@book.Id">
                        <img src="@(book.BookImage != null
                            ? $"data:image/jpeg;base64,{Convert.ToBase64String(book.BookImage)}"
                            : Url.Content("~/images/default.jpg"))"
                             alt="@book.Title"
                             style="height: 300px; width: 307px; object-fit: cover;" />
                    </a>
                    <div class="card-body d-flex flex-column">
                        <div class="d-flex justify-content-between align-items-center mb-2">
                            <h5 class="card-title">@book.Title</h5>
                            <form asp-controller="Wishlists" asp-action="AddToWishlist" method="post">
                                <input type="hidden" name="bookId" value="@book.Id" />
                                <input type="hidden" name="returnUrl" value="@($"{Context.Request.Path}{Context.Request.QueryString}")" />
                                <button class="wishlist-btn" title="Add to Wishlist">
                                    <i class="far fa-heart"></i>
                                </button>
                            </form>
                        </div>
                        <p class="card-text text-danger fw-bold">@book.Price.ToString("0.0") Lei</p>
                        <form asp-controller="Orders" asp-action="AddToCart" method="post" class="mt-auto">
                            <input type="hidden" name="bookId" value="@book.Id" />
                            <input type="hidden" name="quantity" value="1" />
                            <button type="submit" class="btn btn-outline-primary w-100">
                                <i class="fas fa-shopping-cart"></i> Add to cart
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }
    </div>
}
